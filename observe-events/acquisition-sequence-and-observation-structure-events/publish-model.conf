subsystem = ESW
component = acquisitionObsEventLib

publish {
  events = [
    {
      // Published by OCS Sequencer
      name = ObserveStart
      description = "Indicates the start of execution of actions related to an Observe command"
      parameters = [
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
      ]
    }
    {
      // Published by OCS Sequencer
      name = ObservationStart
      description = "Indicates the start of execution of actions related  to an observation including acquisition and  science data acquisition"
      parameters = [
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
      ]
    }
    {
      // Published by OCS Sequencer
      name = PresetStart
      description = "Indicates the start of the preset phase of acquisition â€¢ OCS Sequencer"
      parameters = [
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
      ]
    }
    {
      // Published by OCS Sequencer
      name = PresetEnd
      description = "Indicates the end of the preset phase of acquisition"
      parameters = [
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
      ]
    }
    {
      // Published by OCS Sequencer
      name = GuidestarAcqStart
      description = "Indicates the start of locking the telescope to the sky with guide and WFS targets"
      parameters = [
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
      ]
    }
    {
      // Published by OCS Sequencer
      name = GuidestarAcqEnd
      description = "Indicates the end of locking the telescope to the sky with guide and WFS targets"
      parameters = [
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
      ]
    }
    {
      // Published by OCS Sequencer
      name = ScitargetAcqStart
      description = "Indicates the start of acquisition phase where science target is peaked up as needed after guidestar locking"
      parameters = [
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
      ]
    }
    {
      // Published by OCS Sequencer
      name = ScitargetAcqEnd
      description = "Indicates the end of acquisition phase where science target is centered as needed after guidestar locking"
      parameters = [
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
      ]
    }
    {
      // Published by Instrument Sequencer or possibly OCS Sequencer
      name = ObseveStart
      description = "Indicates the start of execution of actions related to an Observe command"
      parameters = [
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
      ]
    }

    // EXPOSURE OBSERVE EVENTS DISCUSSED EARLIER OCCUR HERE

    {
      // Published by OCS Sequencer
      name = ObserveEnd
      description = "Indicates the end of execution of actions related to an Observe command"
      parameters = [
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
      ]
    }
    {
      // Published by OCS Sequencer
      name = ObservationEnd
      description = "Indicates the start of execution of actions related to an observation including acquisition and science data acquisition."
      parameters = [
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
      ]
    }
    {
      // Published by OCS Sequencer
      name = ObservePaused
      description = "Indicates that a user has paused the current observation Sequence which will happen after the current step concludes."
      parameters = [
        // TODO: CSW has no ObsId, check whic is correct
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
      ]
    }
    {
      // Published by OCS Sequencer
      name = ObserveResumed
      description = "Indicates that a user has resumed a paused observation Sequence"
      parameters = [
        // TODO: CSW has no ObsId, check whic is correct
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
      ]
    }
    {
      // Published by ESW HCMS user interface
      name = DowntimeStart
      description = """
        Indicates that something has occurred that interrupts the normal observing workflow and time accounting.
        This alarm will have a hint (TBD) that indicates the cause of the downtime for statistics.
        Examples are: weather, equipment or other technical failure, etc.
        Downtime is ended by the start of an observation or exposure.
      """
      parameters = [
        {
          name = obsId
          description = "Observation ID to which the exposure belongs."
          type = string
        }
        {
          name = reasonForDowntime
          description = "A hint that indicates the cause of the downtime for statistics"
          type = string
        }
      ]
    }
    {
      name = ExposureAvailable
      description = "Indicates that the raw science exposure has been stored and internal databases have been updated such that a client can request the exposure"
      parameters = [
        {
          name = exposureId
          description = "An identifier in ESW/DMS for a single exposure."
          type = string
        }
      ]
    }
    {
      name = MetadataAvailable
      description = "Indicates DMS has ingested the metadata following the exposureEnd"
      parameters = [
        {
          name = exposureId
          description = "An identifier in ESW/DMS for a single exposure."
          type = string
        }
      ]
    }
  ]
}
