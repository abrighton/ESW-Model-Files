subsystem = ESW
component = master-sequencer


subscribe {
  description = """
  The items that the ESW master sequencer subscribes to are mainly for determining status, and tracking progress of initiated commands.
"""
  events = [

    // --- IRIS Events ---

    {
      subsystem = IRIS
      component = is
      name = exposureRepeats
    }
    {
      subsystem = IRIS
      component = is
      name = state
    }
    {
      subsystem = IRIS
      component = is
      name = cmdStatus
    }
    {
      subsystem = IRIS
      component = is
      name = globalMode
    }
    {
      subsystem = IRIS
      component = is
      name = observing
    }
    {
      subsystem = IRIS
      component = is
      name = aborting
    }
    {
      subsystem = IRIS
      component = is
      name = ifsMode
    }
    {
      subsystem = IRIS
      component = is
      name = sciAdcFollow
    }
    {
      subsystem = IRIS
      component = is
      name = ifsObserveSettings
    }
    {
      subsystem = IRIS
      component = is
      name = imagerObserveSettings
    }
    {
      subsystem = IRIS
      component = is
      name = startPrepare
    }
    {
      subsystem = IRIS
      component = is
      name = startDataAcquisition
    }
    {
      subsystem = IRIS
      component = is
      name = endDataAcquisition
    }
    {
      subsystem = IRIS
      component = is
      name = startReadout
    }
    {
      subsystem = IRIS
      component = is
      name = endReadout
    }
    {
      subsystem = IRIS
      component = is
      name = startDatasetWrite
    }
    {
      subsystem = IRIS
      component = is
      name = endDatasetWrite
    }
    {
      subsystem = IRIS
      component = is
      name = observeComplete
    }
    {
      subsystem = IRIS
      component = is
      name = observationId
    }
    {
      subsystem = IRIS
      component = is
      name = observerKeywords
    }
    {
      subsystem = IRIS
      component = is
      name = observationBlockKeywords
    }
    {
      subsystem = IRIS
      component = is
      name = scriptName
    }


    // --- ESW Events ---

    {
      subsystem = OSS
      component = oss-component
      name = plcStateEvent
    }
    {
      subsystem = OSS
      component = oss-component
      name = srcfStatusEventExample
    }
    {
      subsystem = OSS
      component = oss-component
      name = accessControlEvent
    }
  ]

  alarms = [
    {
      subsystem = OSS
      component = oss-component
      name = plcControllerFault
    }
    {
      subsystem = OSS
      component = oss-component
      name = moduleHardwareFault
    }
    {
      subsystem = OSS
      component = oss-component
      name = moduleCommunicationFault
    }
    {
      subsystem = OSS
      component = oss-component
      name = gscLscCommunicationFault
    }
    {
      subsystem = OSS
      component = oss-component
      name = estopAlarm
    }
    {
      subsystem = OSS
      component = oss-component
      name = seismicAlarm
    }
    {
      subsystem = OSS
      component = oss-component
      name = fireAlarm
    }
    {
      subsystem = OSS
      component = oss-component
      name = lscModeAlarm
    }
    {
      subsystem = OSS
      component = oss-component
      name = lscInterlockAlarm
    }
  ]

}
